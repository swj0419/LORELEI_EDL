import argparse

PARSER = argparse.ArgumentParser(description='transliteration with monotonic attention')
PARSER.add_argument('--iters', type=int, default=20, help='# train iters (default: 20)')
PARSER.add_argument('--maxsteps', type=int, default=500000, help='# train iters (default: 5)')
PARSER.add_argument('--batch_size', type=int, default=1, help='batch size (default: 1)')
PARSER.add_argument('--seed', type=int, default=42, metavar='N', help='random seed (default: 42)')
PARSER.add_argument('--restore', type=str, default=None, help='path from which to restore model')
PARSER.add_argument('--profile', action='store_true', help='restore model')
PARSER.add_argument('--save', type=str, default=None, help='save model')
PARSER.add_argument('--lang', type=str, default="hi", help='language')
PARSER.add_argument('--wdim', type=int, default=50, help='word vec size')
PARSER.add_argument('--hdim', type=int, default=20, help='rnn vec size')
PARSER.add_argument('--cell', type=str, default="gru", help='rnn type')
PARSER.add_argument('--wdrop', type=float, default=0.0, help='word dropout')
PARSER.add_argument('--lr', type=float, default=0.001, help='learning rate')
PARSER.add_argument('--clip', type=float, default=None, help='grad clipping')
PARSER.add_argument('--optimizer', type=str, default="adam", help='optimizer')
PARSER.add_argument('--extra', type=str, default=None, help='extra mined data')
PARSER.add_argument('--nat_or_eng', type=str, default="both", help='nat|eng|both')
PARSER.add_argument('--evalfreq', type=int, default=500, help='(default: 500)')
PARSER.add_argument('--logfreq', type=int, default=100, help='(default: 100)')
PARSER.add_argument('--patience', type=int, default=10, help='(default: 10)')
PARSER.add_argument('--reduction_factor', type=float, default=0.1, help='reduction factor for LR schedule')
PARSER.add_argument('--beam_width', type=int, default=1, help='(default: 1)')
PARSER.add_argument('--norm_by_length', dest='norm_by_length', action='store_true', help='norm score of final beam contents by length')
PARSER.add_argument('--single_token', dest='single_token', action='store_true', help='filter stuff that is not single token aligned')
PARSER.set_defaults(single_token=True)

PARSER.add_argument('--max_output_length', type=int, default=75, help='(default: 1)')
PARSER.add_argument('--ftrain', type=str, help='train file')
PARSER.add_argument('--ftest', type=str, help='test/val file')
PARSER.add_argument('--frac', type=float, default=1.0, help='frac of train data')
PARSER.add_argument('--dump', type=str, default=None, help='to dump test predictions')
# PARSER.add_argument('--device_id', type=int, default=None, help='gpu device')
# PARSER.add_argument('--ncands', type=int, default=20, help='ncands')
PARSER.add_argument('--no-bidi', dest='bidi', action='store_false', help='do not use bidirectional')
PARSER.set_defaults(bidi=True)
PARSER.add_argument('--no-batch-first', dest='batch_first', action='store_false', help='do not use batch first')
PARSER.set_defaults(batch_first=True)
PARSER.add_argument('--mono', dest='mono', action='store_true', help='use monotonic transliteration model')
PARSER.add_argument('--interactive', action="store_true", dest="interactive")
PARSER.add_argument('--outfile', action="store", dest="outfile")
PARSER.add_argument('--vocabfile', action="store", dest="vocabfile")
PARSER.add_argument('--aligned_file', action="store", dest="aligned_file")

